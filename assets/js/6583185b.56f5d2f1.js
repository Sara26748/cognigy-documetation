"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[425],{4938:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"Cognigy Dokumentation","metadata":{"permalink":"/cognigy-documetation/Cognigy Dokumentation","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Cognigy Dokumentation","description":"---","date":"2019-05-29T00:00:00.000Z","tags":[{"label":"Cognigy","permalink":"/cognigy-documetation/tags/cognigy"},{"label":"Dokumentation","permalink":"/cognigy-documetation/tags/dokumentation"}],"readingTime":5.335,"hasTruncateMarker":false,"authors":[{"name":"Sara Salha","title":"Werkstudentin","url":"https://de.linkedin.com/in/sara-salha-9a6a09230","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"Cognigy Dokumentation","title":"Cognigy Dokumentation","authors":{"name":"Sara Salha","title":"Werkstudentin","url":"https://de.linkedin.com/in/sara-salha-9a6a09230","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["Cognigy","Dokumentation"]},"unlisted":false},"content":"---\\n## Wie registriere ich mich bei Cognigy?\\nUm sich bei Cognigy zu registrieren, kontaktiere bitte einen Admin. Bitte registriere dich NICHT \xfcber andere Wege auf deren Homepage.  \\n\\n## Wie melde ich mich bei Cognigy an?\\nEs gibt keinen allgemeinen Link, wo man sich bei Cognigy anmelden kann. Melde Dich bitte \xfcber den Link Deiner Organisation an. Dieser kann wie folgt aussehen: https://app.cognigy.ai/login?organisationId=1234567890abc. \\n\\nFalls Du den Link nicht hast, wende Dich bitte an einen Admin. \\n\\n## Wie finde ich eine \xdcbersicht der bestehenden Chatbots? \\n### Weg zur \xdcbersicht \\nNach der Anmeldung befindet sich auf der linken Seite eine Spalte mit \u201cAgents\u201d, welche die bestehenden Bots auflistet. \\nDurch das Symbol in der oberen linken Ecke gelangt man zur\xfcck zur Startseite. \\n\\n## Auflistung bestehender Chatbots\\n| Agent  1 | Umgebung | Links    |\\n|----------|----------|----------|\\n| Tonibot  | Produktiv | Link zu Teams|\\n| Tonibot Test| Test   | Direktlink zum Chat|\\n| Tonibot DEV| Entwicklung | Direktlink zum Chat|\\n\\n## Wie erhalte ich Zugriff auf einen Chatbot? (Rechte f\xfcr Chatbots zuweisen) \\nDurch  das Benutzermen\xfc aufrufen und zu Zugriffberechtigungen navigieren. Danach den eigenen Nutzer ausw\xe4hlen und unter Zugewiesene Agents durch \u201e+\u201c einen neuen Bot hinzuf\xfcgen. \\n\\n## Wie kann ich eine bestehende Antwort \xe4ndern? \\n**Hinweis**: \xc4nderungen werden immer auf dem Entwicklungs-Chatbot vorgenommen. \\n\\nHandlungsschritte des Bots sind in speziellen Funktionen, den sogenannten **Nodes** gespeichert. Um eine bestehende Antwort des Bots zu \xe4ndern, muss entweder auf die Say-Node oder die Question-Node zugegriffen werden.\\n\\n![test](/img/3.png)\\n\\n## Was ist ein Flow?\\nEin Flow ist die visuelle Darstellung von Konversationsabl\xe4ufen innerhalb eines Chatbots, welche den Bot in Themenbereiche gliedern. \\n\\nHier wird der Austausch zwischen dem Chatbot und den Nutzer:innen entworfen. \\n\\nDie Nodes innerhalb eines Flows definieren die auszuf\xfchrenden Aktionen (Antwort geben, Nachfrage stellen,\u2026). \\n\\nNach der Auswahl der Flow-\xdcbersicht \xfcber das Kontextmen\xfc Bauen -> Flows kann ein neuer Flow angelegt werden.\\n\\n![test](/img/4.png)\\n\\n## Wie kann ich eine bestehende Antwort \xe4ndern?\\nKlicke innerhalb eines Flows auf eine **Node**, diese sind durch einen blauen Unterstrich gekennzeichnet und passe im Textfeld die Antwort an. Abschlie\xdfend muss auf den **Node Speichern** Button gedr\xfcckt werden. \\n\\n## Wie kann ich eine weitere Antwort einpflegen?\\nDurch das Plus-Symbol innerhalb eines Flows kann eine weitere Antwort eingepflegt werden. Dort kann die **Say-Node** ausgew\xe4hlt werden, um eine weitere Antwort einzupflegen. Neben der Say-Node existieren dort alle weiteren Funktionen zur Erweiterung des Chatbots. Die Abl\xe4ufe innerhalb eines Flows werden chronologisch von oben nach unten durchlaufen. \\n\\n## Wie kann ich eine neue Antwort einpflegen?\\n### Was ist ein Intent? \\nDurch Intents (Absicht), k\xf6nnen beachsichte Handlungen eines Chatbot-Nutzers erkannt werden. Jeder Intent definiert sich durch Beispielss\xe4tze, die dem Bot bei der Erkennung helfen. \\n\\nIntents werden immer nur innerhalb eines Flows definiert. \\n\\nFragt der Nutzer beispielsweise danach, seine Zahlungsart zu wechseln, so wird der Intent \u201e02-zahlungsart-wechseln\u201c aktiviert und der Chatbot f\xfchrt eine entsprechende Handlung aus. \\n\\n\\n### Wof\xfcr eignen sich Intents, wof\xfcr nicht? (Optimaler Aufbau)\\nIntents helfen dabei, das Nutzeranliegen zu erkennen.  \\nIntents sollten nicht direkt aus dem Monitoring \xfcbernommen werden, sich jedoch daran orientieren.\\nBeachten: \\n-     In den einzupflegenden Beispiels\xe4tzen sollte sich auf die wichtigsten Informationen beschr\xe4nkt werden \\n-     Zwei verschiedene Nutzeranliegen, die jedoch auf den gleichen Intent abzielen, sollten in zwei unterschiedlichen Beispiels\xe4tzen verpackt werden.\\n-     Es sollte darauf geachtet werden, diese grammatikalisch korrekt auszuf\xfchren. \\n-     Thematische \xdcberschneidungen mit anderen Intents sollten vermieden werden \\n-     Mindestens zehn Beispiels\xe4tze sollten formuliert werden \\nIn Cognigy werden die Intents anhand eines Scores von 0 bis 1 bewertet. Ein hoher Score ist erstrebenswert.\\nEbenso werden die Intents mithilfe von \u201cL\xe4mpchen\u201d (gr\xfcn,gelb,rot) eingestuft. Rote L\xe4mpchen sollten vollumf\xe4nglich vermieden werden. Ber\xfchren des L\xe4mpchens mit dem Mauszeiger zeigt den Score und weitere Anmerkungen an. \\n\\n![test](/img/5.png)\\n\\nEbenso werden die Intents mithilfe von \u201cL\xe4mpchen\u201d (gr\xfcn,gelb,rot) eingestuft. Rote L\xe4mpchen sollten vollumf\xe4nglich vermieden werden. Ber\xfchren des L\xe4mpchens mit dem Mauszeiger zeigt den Score und weitere Anmerkungen an.\\n\\n![test](/img/6.png)\\n\\n### Wie erstelle ich einen Intent?\\n**Hinweis**: \xc4nderungen werden immer auf dem Entwicklungs-Chatbot vorgenommen.\\nInnerhalb eines Flows muss in der Leiste oben **NLU** ausgew\xe4hlt werden.\\n\xdcber den \u201cNeuer Intent\u201d-Button kann ein neuer Intent erstellt werden, dessen Name definiert werden muss.\\n\\n![test](/img/7.png)\\n\\nAnschlie\xdfend k\xf6nnen Beispiels\xe4tze in den Intent geschrieben werden.\\n\\nNeben einer normalen Textausgabe, kann in der Node auch beispielsweise ein Button oder ein Bild mitausgegeben werden. \xdcber den Ausgabetyp nach anklicken der entsprechenden Node, kann der gew\xfcnschte Fall ausgew\xe4hlt werden.\\n\\n![test](/img/8.png)\\n\\n![test](/img/9.png)\\n\\nF\xfcr einen Button muss der Ausgabetyp \u201eText with Buttons\u201c gew\xe4hlt werden. Durch Bet\xe4tigen der \u201eNeuer Button\u201c-Oberfl\xe4che kann ein Button definiert werden. Dieser kann dem Bot beispielsweise einen Wert zur\xfcckweisen (\u201ePostback-value) oder an eine URL verweisen.\\n\\n![test](/img/10.png)\\n\\nZus\xe4tzlich gibt es die M\xf6glichkeit f\xfcr vorgefertigte Antworten (\u201eQuick Replies\u201c). Diese k\xf6nnen ebenso einen Wert an den Bot zur\xfcckgeben und sind beispielsweise sinnvoll bei Ja/Nein-Fragen oder wenn die Anzahl m\xf6glicher Antworten beschr\xe4nkt ist.\\n\\n### Wie trainiere ich einen Intent?\\n\\n**Hinweis**: \xc4nderungen werden immer auf dem Entwicklungs-Chatbot vorgenommen.\\n\\nNach der Erstellung eines Intents oder nach **jeder** \xc4nderung eines bestehenden Intents muss der Chatbot aktualisiert werden. Dies geschieht \xfcber den **Model bauen**-Button.\\n\\n![test](/img/11.png)\\n\\nNach der Bot-Aktualisierung erscheint sowohl neben dem Intent, als auch neben jedem Beispielssatz das L\xe4mpchen, was die G\xfcte der \xc4nderung beschreibt.\\n![test](/img/12.png)\\n\\n![test](/img/13.png)\\n\\nMit Hilfe des **Intenttrainer** kann man optional noch den Intent verbessern.\\n\\n![test](/img/14.png)\\n\\n![test](/img/15.png)\\n\\n## Wie erstelle ich einen neuen Gespr\xe4chsverlauf?\\nInnerhalb eines Flows werden die Gespr\xe4chshandlungen nach Intents aufgeteilt. Mittels der Lookup-Node wird geschaut, welcher Intent erkannt wurde.\\n\\n![test](/img/16.png)\\n\\n![test](/img/17.png)\\n\\nNun kann f\xfcr jeden einzelnen Intent ein Gespr\xe4chsverlauf erstellt werden.\\nDazu muss innerhalb des Lookups ein Intent durch Klicken auf das Case-Symbol ausgew\xe4hlt werden.\\nWird kein Intent erkannt, dann wird der Default-Strang ausgef\xfchrt.\\nMittels des Plus-Symbols \u201e+\u201c k\xf6nnen jegliche Funktionen in den Gespr\xe4chsverlauf eingef\xfcgt werden\\nNeben der Say-Node kann mittels der Question-Node durch den Chatbot eine Frage an den Nutzer gestellt werden, um dessen Anliegen zu spezifizieren. Im Gegensatz zur Say-Node wird hier auf die Eingabe des Nutzers gewartet.\\n\\n![test](/img/18.png)\\n\\nHierbei muss der Fragentyp spezifiziert werden. Mit \u201eText\u201c werden jegliche Antworten akzeptiert, w\xe4hrend \u201eJa/Nein\u201c eine entsprechende Ja/Nein-Antwort erwartet.\\n\\nIn der Men\xfcoption \u201eReprompt Optionen\u201c sollte noch der Text ge\xe4ndert werden, der angezeigt wird, wenn der Fragentyp nicht erf\xfcllt wurde von der Nutzereingabe. Dies kann z.B. auftreten, wenn der Fragentyp \u201eJa/Nein\u201c ist, und der/die Nutzer:in etwas anderes eintippt als \u201eJa\u201c oder \u201eNein\u201c (Welche W\xf6rter genau zu \u201eJa\u201c und zu \u201eNein\u201c geh\xf6ren, kann sp\xe4ter in den Einstellungen festgelegt werden). Weiterhin sollte \xfcberlegt werden, ob es bei dieser Frage sinnvoll ist, dass sie bei einer falschen Antwort noch einmal gestellt wird. Je nach Wunsch muss dann der Regler \u201eFragen wiederholen\u201c aktiviert werden oder nicht.\\n\\n![test](/img/19.png)"}]}')}}]);